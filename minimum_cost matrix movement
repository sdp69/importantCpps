#include <bits/stdc++.h>
using namespace std;

int min_cost(int **arr, int si, int ei, int sj, int ej, int **arr2){
  if(si == ei && ej == sj)
    return arr[ei][ej];
  if(si > ei || sj > ej)
    return INT_MAX;
  if(arr[si][sj] > -1)
    return arr[si][sj];
  int option1 = min_cost(arr, si+1, ei, sj, ej, arr2);
  int option2 = min_cost(arr, si, ei, sj+1, ej, arr2);
  int option3 = min_cost(arr, si+1, ei, sj+1, ej, arr2);
  arr2[si][sj] = arr[si][sj] + min(option3, min(option2, option1));
  return (arr[si][sj]) + min(option3, min(option2, option1));
}

int main() 
{
    int **arr;
     arr = new int*[3];
    for(int i = 0; i < 3; i++){
     arr[i] = new int[3];
    }
    arr[0][0] = 4; 
    arr[0][1] = 3;
    arr[0][2] = 2;
    arr[1][0] = 1;
    arr[1][1] = 8;
    arr[1][2] = 9;
    arr[2][0] = 1;
    arr[2][1] = 1;
    arr[2][2] = 8;
    int **arr2;
     arr2 = new int*[3];
    for(int i = 0; i < 3; i++){
     arr2[i] = new int[3];
    }
    arr2[0][0] = -1; 
    arr2[0][1] = -1;
    arr2[0][2] = -1;
    arr2[1][0] = -1;
    arr2[1][1] = -1;
    arr2[1][2] = -1;
    arr2[2][0] = -1;
    arr2[2][1] = -1;
    arr2[2][2] = 8;
    cout << min_cost(arr, 0, 2, 0, 2, arr2);
    return 0;
}
